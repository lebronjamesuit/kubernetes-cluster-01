my-note.txt

-- URLs
curl http://34.30.3.129:8000/currency-exchange/from/USD/to/GBP
--


YAML
-- Why I wants to create deployment.yaml and service.yaml
#get file
kubectl get deployment [deployment-name] -o yaml 

#save file
Syntax: kubectl get deployment [deployment-name] -o yaml >> deployment.yaml

kubectl get deployment currency-exchange -o yaml >> deployment.yaml

kubectl get service currency-exchange -o yaml >> service.yaml


-- edit replica from 1 to 2 or 3
kubectl apply -f deployment.yaml

kubectl get pod   
-> We got 2 pod are running

NAME                                       READY   STATUS    RESTARTS   AGE
currency-exchange-86984bc99b-jcwp8         1/1     Running   0          6h48m
currency-exchange-86984bc99b-jp77v         1/1     Running   0          80s 

curl http://34.30.3.129:8000/currency-exchange/from/USD/to/GBP
Result: load balacing apply in K8s
--


service/currency-exchange     LoadBalancer   10.0.12.127   35.184.83.147    8000:30215/TCP   3h32m

curl http://35.184.83.147:8000/currency-exchange/from/USD/to/GBP
NAME                                       READY   STATUS    RESTARTS   AGE
pod/currency-exchange-7c7f6dcfb9-lnhr7     1/1     Running   0          4m57s
pod/currency-exchange-7c7f6dcfb9-sqxx4     1/1     Running   0          4m53s



# Rollout revision
kubectl rollout status deployment/currency-exchange --output=jsonpath='{.metadata.annotations.deployment\.kubernetes\.io/revision}'

# I am thinking about avoid downtime when deploy services
Spring has health check systems Liveness and LiveNess , status is up.
http://35.184.83.147:8000/actuator/health/liveness
http://35.184.83.147:8000/actuator/health/liveness

-- The command That I use to auto StackOverflowError

Kubectl autoscale deployment currency-exchange --min=1 --max=10 --cpu-percent=20

-> horizontalpodautoscaler.autoscaling/currency-exchange autoscaled

watch -n 0.1  curl http://35.184.83.147:8000/currency-exchange/from/USD/to/GBP


# You need to run metric server to make below commands working with correct data:
kubectl get hpa
kubectl top node
kubectl top pods
kubectl get pods --all-namespaces




